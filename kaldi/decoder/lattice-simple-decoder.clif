from "itf/options-itf-clifwrap.h" import *
from "fstext/lattice-weight-clifwrap.h" import *
from "fstext/fst-clifwrap.h" import *
from "fstext/vector-fst-clifwrap.h" import *
from "decoder/lattice-faster-decoder-clifwrap.h" import *
from "itf/decodable-itf-clifwrap.h" import *

from "decoder/lattice-simple-decoder.h":
  namespace `kaldi`:
    class LatticeSimpleDecoderConfig:
      beam: float
      lattice_beam: float
      prune_interval: int
      determinize_lattice: bool
      prune_lattice: bool
      beam_ratio: float
      prune_scale: float

      # def_opts: DeterminizeLatticePhonePrunedOptions

      def `Register` as register(self, opts: OptionsItf)

      def `Check` as check(self)

    class LatticeSimpleDecoder:
      def __init__(self, fst: StdFst, config: LatticeSimpleDecoderConfig)

      def `GetOptions` as get_options(self) -> LatticeSimpleDecoderConfig

      def `Decode` as decode(self, decodable: DecodableInterface) -> bool

      def `ReachedFinal` as reached_final(self) -> bool

      def `InitDecoding` as init_decoding(self)

      def `FinalizeDecoding` as finalize_decoding(self)

      def `FinalRelativeCost` as final_relative_cost(self) -> float

      def `GetBestPath` as get_best_path(self, lat: LatticeVectorFst, use_final_probs: bool = default) -> bool

      def `GetRawLattice` as get_raw_lattice(self, lat: LatticeVectorFst, use_final_probs: bool = default) -> bool

      # Deprecated
      # def `GetLattice` as get_lattice(self, clat: CompactLattice, use_final_probs: bool = default) -> bool

      def `NumFramesDecoded` as num_frames_decoded(self) -> int

