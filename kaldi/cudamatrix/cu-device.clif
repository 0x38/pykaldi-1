from kaldi.base._timer import Timer

from "cudamatrix/cu-device.h":
  namespace `kaldi`:
    class CuTimer(Timer):
      pass

    class CuDevice:
      @classmethod
      def `InstantiatePtr` as instantiate(cls) -> CuDevice

      def `SelectGpuId` as select_gpu_id(self, use_gpu: str)

      def `Enabled` as enabled(self) -> bool

      def `ActiveGpuId` as active_gpu_id(self) -> int

      def `DoublePrecisionSupported` as double_precision_supported(self) -> bool

      # def AccuProfile(self, function_name: str, timer: CuTimer)

      def `PrintProfile` as print_profile(self)

      def `PrintMemoryUsage` as print_memory_usage(self)

      def `ResetProfile` as reset_profile(self)

      # def GetFreeMemory(self) -> (ret: str, free: int, total: int)

      # def DeviceGetName(self, len: int, dev: int) -> str

      def `CheckGpuHealth` as check_gpu_health(self)

      def `SetDebugStrideMode` as set_debug_stride_mode(self, mode: bool) -> bool
