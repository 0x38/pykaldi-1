from "base/iostream-clifwrap.h" import *
from "fstext/vector-fst-clifwrap.h" import *

from "lat/kaldi-lattice.h":
  namespace `kaldi`:

    # typedef LatticeVectorFst CompactLattice

    def `WriteCompactLattice` as write_compact_lattice(os:ostream, binary: bool, clat: LatticeVectorFst) -> bool

    def `WriteLattice` as write_lattice(os:ostream, binary: bool, lat: LatticeVectorFst) -> bool

    def `ReadCompactLattice` as read_compact_lattice(is:istream, binary: bool, clat: LatticeVectorFst) -> bool

    def `ReadLattice` as read_lattice(is: istream, binary: bool, lat: LatticeVectorFst) -> bool

    # def CompactLatticeHolder:
    #   def `Write` as write(self, os:ostream, binary:bool, t: LatticeVectorFst) -> bool

    #   def `Read` as read(self, is:istream) -> bool

    #   def `IsReadBinary` as is_read_binary(self) -> bool

    #   def `Value` as value(self) -> LatticeVectorFst

