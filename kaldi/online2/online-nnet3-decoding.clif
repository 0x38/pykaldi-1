from "decoder/lattice-faster-decoder-clifwrap.h" import *
from "decoder/lattice-faster-online-decoder-clifwrap.h" import *
from "hmm/transition-model-clifwrap.h" import *
from "nnet3/decodable-simple-looped-clifwrap.h" import *
from "fstext/fst-clifwrap.h" import *
from "fstext/vector-fst-clifwrap.h" import *
from "online2/online-nnet2-feature-pipeline-clifwrap.h" import *
from "online2/online-endpoint-clifwrap.h" import *


from "online2/online-nnet3-decoding.h":
  namespace `kaldi`:
    class SingleUtteranceNnet3Decoder:

      def `SingleUtteranceNnet3Decoder` as __init__(self, decoder_opts: LatticeFasterDecoderOptions, trans_model: TransitionModel, info: DecodableNnetSimpleLoopedInfo, fst: StdFst, features: OnlineNnet2FeaturePipeline)

      def `AdvanceDecoding` as advance_decoding(self)

      def `NumFramesDecoded` as num_frames_decoded(self) -> int

      def `GetLattice` as get_lattice(self, end_of_utterance: bool) -> (clat: CompactLatticeVectorFst)

      def `GetBestPath` as get_best_path(self, end_of_utterance: bool) -> (best_path: LatticeVectorFst)

      def `EndpointDetected` as endpoint_detected(self, config: OnlineEndpointConfig) -> bool

      # def `Decoder` as decoder(self) -> LatticeFasterOnlineDecoder


