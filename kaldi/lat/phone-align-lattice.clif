from "itf/options-itf-clifwrap.h" import *
from "fstext/lattice-weight-clifwrap.h" import *
from "fstext/vector-fst-clifwrap.h" import *
from "hmm/transition-model-clifwrap.h" import *

from kaldi.util import _value_error_on_false

from "lat/phone-align-lattice.h":
  namespace `kaldi`:
    class PhoneAlignLatticeOptions:
      """Options for phone alignment."""
      reorder: bool
      """Whether lattice was created from a graph with reorder option set."""
      remove_epsilon: bool
      """Whether to remove epsilon arcs from the phone lattice.

      If :attr:`replace_output_symbols` is ``False``, this will mean that an
      arc can have multiple phones on it.
      """
      replace_output_symbols: bool
      """Whether to replace output symbols (typically words) with phones."""

      def `Register` as register(self, opts: OptionsItf):
        """Registers options with an object implementing the options interface.

        Args:
          opts (OptionsItf): An object implementing the options interface.
            Typically a command-line option parser.
        """

    def `PhoneAlignLattice` as phone_align_lattice(
      lat: CompactLatticeVectorFst, tmodel: TransitionModel,
      opts: PhoneAlignLatticeOptions)
      -> (success: bool, lat_out: CompactLatticeVectorFst):
      """Aligns the phone labels and transition-ids.

      Outputs a lattice in which the arcs correspond exactly to sequences of
      phones, so the boundaries between the arcs correspond to the boundaries
      between phones. If `opts.remove_epsilon == False` and
      `opts.replace_output_symbols == False`, an arc may have >1 phone on it,
      but the boundaries will still correspond with the boundaries between
      phones.

      Raises:
        ValueError: If some kind of error was detected (e.g. the "reorder"
        option was incorrectly specified.)

      Note:
        It is possible to have arcs with words on them but no transition-ids at
        all.
      """
      return _value_error_on_false(...)
