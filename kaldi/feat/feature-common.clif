# This wrapper is currently disabled since CLIF cannot disambiguate between
# the two constructors of OfflineFeatureTpl without additional changes to the
# source file (feat/feature-common.h). See feat/feature-common-ext.{h,clif}.
from "matrix/kaldi-vector-clifwrap.h" import *
from "matrix/kaldi-matrix-clifwrap.h" import *
from "feat/feature-mfcc-clifwrap.h" import *

from "feat/feature-common.h":
  namespace `kaldi`:
    class `OfflineFeatureTpl<MfccComputer>` as Mfcc:
      # Additional dummy argument was added for resolving the difficulty CLIF
      # was having with matching this method signature. We won't expose it in
      # the Python class wrapping Mfcc C extension type.
      def __init__(self, opts: MfccOptions)

      @add__init__
      def `OfflineFeatureTpl` as from_other(self, other: Mfcc)

      def Compute(self, wave: VectorBase, vtnl_warp: float) -> Matrix

      def ComputeFeatures(self, wave: VectorBase, sample_freq: float,
                          vtnl_warp: float) -> Matrix

      def Dim(self) -> int
