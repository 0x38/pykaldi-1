from "itf/decodable-itf-clifwrap.h" import *
from "matrix/kaldi-matrix-clifwrap.h" import *
from "gmm/am-diag-gmm-clifwrap.h" import *
from "hmm/transition-model-clifwrap.h" import *

from "gmm/decodable-am-diag-gmm.h":
  namespace `kaldi`:
    class DecodableAmDiagGmmScaled(DecodableInterface):
      def __init__(self, am: AmDiagGmm, tm: TransitionModel, feats: Matrix,
                   scale: float, log_sum_exp_prune: float = default)

      @add__init__
      def `DecodableAmDiagGmmScaled` as own_feats(
          self, am: AmDiagGmm, tm: TransitionModel, scale: float,
          log_sum_exp_prune: float, feats: Matrix)

      # FIXME: Add a work around wrapper
      # def TransModel(self) -> TransitionModel
