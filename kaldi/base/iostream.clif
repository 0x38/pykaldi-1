"""C++ std::iostream wrapper.

This module provides the wrappers needed for working with C++ std::iostream
instances. The wrappers for input and/or output stream types do not expose any
members since we do not want to work with them directly in Python. They can be
used for wrapping methods and functions that accept or return stream objects.
The get_* utility functions provide the handles for the standard C++ streams.
"""

from "base/iostream-ext.h":
  namespace `::std`:
    class istream:
      """Input stream."""
      def `good` as _good(self) -> bool

    class ostream:
      """Output stream."""
      def `good` as _good(self) -> bool

    class iostream(istream):
      """Input/output stream."""
      pass

    def `GetStdinPtr` as get_stdin() -> istream:
      """Get standard input stream."""

    def `GetStdoutPtr` as get_stdout() -> ostream:
      """Get standard output stream."""

    def `GetStderrPtr` as get_stderr() -> ostream:
      """Get standard error stream."""

    def `ReadLine` as read_line(input: istream) -> str:
      """Reads a line from istream input delimited by newlines"""
